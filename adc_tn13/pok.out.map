Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o (exit)
/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
                              pok.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                              pok.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

adc                 0x2               pok.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/libm.a
LOAD pok.o
LOAD /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x174
 *(.vectors)
 .vectors       0x00000000       0x14 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000014                . = ALIGN (0x2)
                0x00000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000014        0x0 linker stubs
 *(.trampolines*)
                0x00000014                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000014                __ctors_start = .
 *(.ctors)
                0x00000014                __ctors_end = .
                0x00000014                __dtors_start = .
 *(.dtors)
                0x00000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000014        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
                0x00000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000014        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000001c       0x16 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
                0x0000001c                __do_copy_data
 .init4         0x00000032       0x10 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
                0x00000046                __vector_1
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_2
                0x00000046                __vector_8
 .text          0x00000048      0x128 pok.o
                0x00000048                hc164_init
                0x00000056                hc164_send
                0x00000072                hc164_clr
                0x0000008c                hc164_string
                0x000000e2                chartoled
                0x00000112                __vector_9
                0x00000136                main
 .text          0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .text          0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .text          0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x00000170                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
                0x00000170                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000170        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
                0x00000170                exit
                0x00000170                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000170        0x4 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000174                _etext = .

.data           0x00800060       0x24 load address 0x00000174
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
 .data          0x00800060       0x24 pok.o
                0x00800060                LED_num_table
                0x0080006a                LED_alph_table
 .data          0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .data          0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .data          0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800084                . = ALIGN (0x2)
                0x00800084                _edata = .
                0x00800084                PROVIDE (__data_end, .)

.bss            0x00800084        0x2
                0x00800084                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
 .bss           0x00800084        0x0 pok.o
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_exit.o)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.3.4/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800084        0x2 pok.o
                0x00800084                adc
                0x00800086                PROVIDE (__bss_end, .)
                0x00000174                __data_load_start = LOADADDR (.data)
                0x00000198                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800086        0x0
                0x00800086                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800086                PROVIDE (__noinit_end, .)
                0x00800086                _end = .
                0x00800086                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xed0
 *(.stab)
 .stab          0x00000000      0x69c /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o
 .stab          0x0000069c      0x834 pok.o
                                0x840 (size before relaxing)

.stabstr        0x00000000      0x93a
 *(.stabstr)
 .stabstr       0x00000000      0x93a /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr25/crttn13.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(pok.out elf32-avr)
LOAD linker stubs
